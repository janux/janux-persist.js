/**
 * Project janux-persistence
 * Created by ernesto on 6/12/17.
 */

import {EntityPropertiesImpl} from "persistence/implementations/dao/entity-properties";
import * as logger from 'util/logger-api/logger-api';
import uuid = require("uuid");

/**
 * Generates a uuid to the object before insertMethod it.
 */
export class UuidGenerator {

	public static UUID_PROPERTY = "id";

	/**
	 * Inserts a uuid attribute with a unique value only if entityProperties has the autoGenerated as true.
	 * For the people who has doubts about collisions ( duplicated values) . This comment form wikipedia might help.
	 * Reference: https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_.28random.29
	 * "For there to be a one in a billion chance of duplication, 103 trillion version 4 UUIDs must be generated."
	 *
	 * or ...
	 *
	 * "For example, the number of random version 4 UUIDs which need to be generated in order to have a 50%
	 * probability of at least one collision is 2.71 quintillion, computed as follows"
	 * @param entityProperties
	 * @param objectToInsert
	 */
	public static assignUUIDToIdAttribute(entityProperties: EntityPropertiesImpl, objectToInsert: any) {
		this._log.debug("Call to assignUUIDToIdAttribute with entityProperties: %j, objectToInsert %j:",
			entityProperties,
			objectToInsert);
		if (entityProperties != null && entityProperties.autoGenerated === true) {
			this._log.debug("Inserting %j", this.UUID_PROPERTY);
			objectToInsert[this.UUID_PROPERTY] = uuid.v4();
		} else {
			this._log.debug("Not inserting uuid");
		}
	}

	private static _log = logger.getLogger("UuidGenerator");
}
